#!/bin/sh

# Increment, decrement, or mute the volume and send a notification
# of the current volume level.

# function to increase or decrease volume
function send_notification() {
	# volume is the variable stands for the actual current system's volume returned by pamixer
	volume=$(pamixer --get-volume)
	# -a: specify app name for the notifs
	# -u: urgency level
	# -h: specify extra variable
	# -i: specify icons directory
	# -t: duration for the notif to maintain
	dunstify -a "changevolume" -u low -r 9993 -h int:value:"$volume" -i "volume-$1" "Volume curently at ${volume}%" -t 2000
}

# $1 is the first input passed in when the program is called ie: '/changevolume up'
# $1 is base on user input: 'up', 'down' or 'mute'
case $1 in
up)
	# Set the volume on (if it was muted)
	pamixer -u
	# could add --allow-boost for volume to go over 100%
	pamixer -i 5 
	send_notification "$1"
	;;
down)
	pamixer -u
	pamixer -d 5 
	send_notification "$1"
	;;
mute)
	# switch between mute and unmute
	pamixer -t
	# If the command return a boolean value called True then do the following
	if eval "$(pamixer --get-mute)"; then
		dunstify "It's so quiet" "Volume currently muted" -a "changevolume" -t 2000 -r 9993 -u low -i "volume-mute"  
	else
		pamixer -u
		volume_amute=$(pamixer --get-volume)
		dunstify -a "changevolume" -u low -r 9993 -h int:value:"$volume_amute" -i "volume-up" "Volume curently at ${volume_amute}%" -t 2000
		 
		
	fi
	;;
esac
